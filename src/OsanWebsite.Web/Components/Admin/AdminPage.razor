@inject IBookingRepository repo
@inject DataService Data

<div id="admin-bar">
    <div id="admin-header">
        <img src="/images/o-manager.png" style="height: 50px" />
    </div>

    <div id="toolbar">
        @if (_tableTypes != null)
        {
            <Toolbar TableTypes="_tableTypes" />
        }
    </div>

    <div id="user"></div>
</div>

<div id="admin-sidebar">
    <CampaignList />
</div>

<div id="admin-body">
    @if (Data.SelectedCampaign != null)
    {
        <BookingList />
    }
    else
    {
        <div class="loading-box">
            <span>Veuillez sélectionner une campagne à votre gauche.</span>
        </div>
    }

</div>

<ModalProvider />
<ToastProvider />
<MessageProvider />

@code {
    private IEnumerable<TableType>? _tableTypes;

    private async void OnPropertyChangedHandler(Object? sender, System.ComponentModel.PropertyChangedEventArgs e)
    {
        if (e.PropertyName == "SelectedCampaign")
        {
            await InvokeAsync(() => StateHasChanged());
        }
    }

    protected override async void OnInitialized()
    {
        Data.PropertyChanged += OnPropertyChangedHandler;
        _tableTypes = await repo.GetTableTypesAsync();
        StateHasChanged();
    }

    public void Dispose()
    {
        Data.PropertyChanged -= OnPropertyChangedHandler;
    }
}
